%!PS-Adobe-3.0
%%BoundingBox: 38 24 574 768
%%Title: Enscript Output
%%For: ,,,
%%Creator: GNU Enscript 1.6.6
%%CreationDate: Fri Mar  5 10:31:55 2021
%%Orientation: Portrait
%%Pages: (atend)
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset Enscript-Prolog 1.6 6
%
% Procedures.
%

/_S {	% save current state
  /_s save def
} def
/_R {	% restore from saved state
  _s restore
} def

/S {	% showpage protecting gstate
  gsave
  showpage
  grestore
} bind def

/MF {	% fontname newfontname -> -	make a new encoded font
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  % insert only valid encoding vectors
  encoding_vector length 256 eq {
    newfont /Encoding encoding_vector put
  } if

  newfontname newfont definefont pop
} def

/MF_PS { % fontname newfontname -> -	make a new font preserving its enc
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  newfontname newfont definefont pop
} def

/SF { % fontname width height -> -	set a new font
  /height exch def
  /width exch def

  findfont
  [width 0 0 height 0 0] makefont setfont
} def

/SUF { % fontname width height -> -	set a new user font
  /height exch def
  /width exch def

  /F-gs-user-font MF
  /F-gs-user-font width height SF
} def

/SUF_PS { % fontname width height -> -	set a new user font preserving its enc
  /height exch def
  /width exch def

  /F-gs-user-font MF_PS
  /F-gs-user-font width height SF
} def

/M {moveto} bind def
/s {show} bind def

/Box {	% x y w h -> -			define box path
  /d_h exch def /d_w exch def /d_y exch def /d_x exch def
  d_x d_y  moveto
  d_w 0 rlineto
  0 d_h rlineto
  d_w neg 0 rlineto
  closepath
} def

/bgs {	% x y height blskip gray str -> -	show string with bg color
  /str exch def
  /gray exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    gray setgray
    fill
  grestore
  x y M str s
} def

/bgcs { % x y height blskip red green blue str -> -  show string with bg color
  /str exch def
  /blue exch def
  /green exch def
  /red exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    red green blue setrgbcolor
    fill
  grestore
  x y M str s
} def

% Highlight bars.
/highlight_bars {	% nlines lineheight output_y_margin gray -> -
  gsave
    setgray
    /ymarg exch def
    /lineheight exch def
    /nlines exch def

    % This 2 is just a magic number to sync highlight lines to text.
    0 d_header_y ymarg sub 2 sub translate

    /cw d_output_w cols div def
    /nrows d_output_h ymarg 2 mul sub lineheight div cvi def

    % for each column
    0 1 cols 1 sub {
      cw mul /xp exch def

      % for each rows
      0 1 nrows 1 sub {
        /rn exch def
        rn lineheight mul neg /yp exch def
        rn nlines idiv 2 mod 0 eq {
	  % Draw highlight bar.  4 is just a magic indentation.
	  xp 4 add yp cw 8 sub lineheight neg Box fill
	} if
      } for
    } for

  grestore
} def

% Line highlight bar.
/line_highlight {	% x y width height gray -> -
  gsave
    /gray exch def
    Box gray setgray fill
  grestore
} def

% Column separator lines.
/column_lines {
  gsave
    .1 setlinewidth
    0 d_footer_h translate
    /cw d_output_w cols div def
    1 1 cols 1 sub {
      cw mul 0 moveto
      0 d_output_h rlineto stroke
    } for
  grestore
} def

% Column borders.
/column_borders {
  gsave
    .1 setlinewidth
    0 d_footer_h moveto
    0 d_output_h rlineto
    d_output_w 0 rlineto
    0 d_output_h neg rlineto
    closepath stroke
  grestore
} def

% Do the actual underlay drawing
/draw_underlay {
  ul_style 0 eq {
    ul_str true charpath stroke
  } {
    ul_str show
  } ifelse
} def

% Underlay
/underlay {	% - -> -
  gsave
    0 d_page_h translate
    d_page_h neg d_page_w atan rotate

    ul_gray setgray
    ul_font setfont
    /dw d_page_h dup mul d_page_w dup mul add sqrt def
    ul_str stringwidth pop dw exch sub 2 div ul_h_ptsize -2 div moveto
    draw_underlay
  grestore
} def

/user_underlay {	% - -> -
  gsave
    ul_x ul_y translate
    ul_angle rotate
    ul_gray setgray
    ul_font setfont
    0 0 ul_h_ptsize 2 div sub moveto
    draw_underlay
  grestore
} def

% Page prefeed
/page_prefeed {		% bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} def

% Wrapped line markers
/wrapped_line_mark {	% x y charwith charheight type -> -
  /type exch def
  /h exch def
  /w exch def
  /y exch def
  /x exch def

  type 2 eq {
    % Black boxes (like TeX does)
    gsave
      0 setlinewidth
      x w 4 div add y M
      0 h rlineto w 2 div 0 rlineto 0 h neg rlineto
      closepath fill
    grestore
  } {
    type 3 eq {
      % Small arrows
      gsave
        .2 setlinewidth
        x w 2 div add y h 2 div add M
        w 4 div 0 rlineto
        x w 4 div add y lineto stroke

        x w 4 div add w 8 div add y h 4 div add M
        x w 4 div add y lineto
	w 4 div h 8 div rlineto stroke
      grestore
    } {
      % do nothing
    } ifelse
  } ifelse
} def

% EPSF import.

/BeginEPSF {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack
  userdict begin
  /showpage { } def
  0 setgray 0 setlinecap
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [ ] 0 setdash newpath
  /languagelevel where {
    pop languagelevel
    1 ne {
      false setstrokeadjust false setoverprint
    } if
  } if
} bind def

/EndEPSF {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse
%%EndResource
%%BeginResource: procset Enscript-Encoding-88591 1.6 6
/encoding_vector [
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclam       	/quotedbl     	/numbersign   	
/dollar       	/percent      	/ampersand    	/quoteright   	
/parenleft    	/parenright   	/asterisk     	/plus         	
/comma        	/hyphen       	/period       	/slash        	
/zero         	/one          	/two          	/three        	
/four         	/five         	/six          	/seven        	
/eight        	/nine         	/colon        	/semicolon    	
/less         	/equal        	/greater      	/question     	
/at           	/A            	/B            	/C            	
/D            	/E            	/F            	/G            	
/H            	/I            	/J            	/K            	
/L            	/M            	/N            	/O            	
/P            	/Q            	/R            	/S            	
/T            	/U            	/V            	/W            	
/X            	/Y            	/Z            	/bracketleft  	
/backslash    	/bracketright 	/asciicircum  	/underscore   	
/quoteleft    	/a            	/b            	/c            	
/d            	/e            	/f            	/g            	
/h            	/i            	/j            	/k            	
/l            	/m            	/n            	/o            	
/p            	/q            	/r            	/s            	
/t            	/u            	/v            	/w            	
/x            	/y            	/z            	/braceleft    	
/bar          	/braceright   	/tilde        	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclamdown   	/cent         	/sterling     	
/currency     	/yen          	/brokenbar    	/section      	
/dieresis     	/copyright    	/ordfeminine  	/guillemotleft	
/logicalnot   	/hyphen       	/registered   	/macron       	
/degree       	/plusminus    	/twosuperior  	/threesuperior	
/acute        	/mu           	/paragraph    	/bullet       	
/cedilla      	/onesuperior  	/ordmasculine 	/guillemotright	
/onequarter   	/onehalf      	/threequarters	/questiondown 	
/Agrave       	/Aacute       	/Acircumflex  	/Atilde       	
/Adieresis    	/Aring        	/AE           	/Ccedilla     	
/Egrave       	/Eacute       	/Ecircumflex  	/Edieresis    	
/Igrave       	/Iacute       	/Icircumflex  	/Idieresis    	
/Eth          	/Ntilde       	/Ograve       	/Oacute       	
/Ocircumflex  	/Otilde       	/Odieresis    	/multiply     	
/Oslash       	/Ugrave       	/Uacute       	/Ucircumflex  	
/Udieresis    	/Yacute       	/Thorn        	/germandbls   	
/agrave       	/aacute       	/acircumflex  	/atilde       	
/adieresis    	/aring        	/ae           	/ccedilla     	
/egrave       	/eacute       	/ecircumflex  	/edieresis    	
/igrave       	/iacute       	/icircumflex  	/idieresis    	
/eth          	/ntilde       	/ograve       	/oacute       	
/ocircumflex  	/otilde       	/odieresis    	/divide       	
/oslash       	/ugrave       	/uacute       	/ucircumflex  	
/udieresis    	/yacute       	/thorn        	/ydieresis    	
] def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Courier
/HFpt_w 10 def
/HFpt_h 10 def
/Courier-Bold /HF-gs-font MF
/HF /HF-gs-font findfont [HFpt_w 0 0 HFpt_h 0 0] makefont def
/Courier /F-gs-font MF
/F-gs-font 10 10 SF
/#copies 1 def
% Pagedevice definitions:
gs_languagelevel 1 gt {
  <<
    /PageSize [612 792] 
  >> setpagedevice
} if
%%BeginResource: procset Enscript-Header-simple 1.6 6

/do_header {	% print default simple header
  gsave
    d_header_x d_header_y HFpt_h 3 div add translate

    HF setfont
    user_header_p {
      5 0 moveto user_header_left_str show

      d_header_w user_header_center_str stringwidth pop sub 2 div
      0 moveto user_header_center_str show

      d_header_w user_header_right_str stringwidth pop sub 5 sub
      0 moveto user_header_right_str show
    } {
      5 0 moveto fname show
      45 0 rmoveto fmodstr show
      45 0 rmoveto pagenumstr show
    } ifelse

  grestore
} def
%%EndResource
/d_page_w 536 def
/d_page_h 744 def
/d_header_x 0 def
/d_header_y 729 def
/d_header_w 536 def
/d_header_h 15 def
/d_footer_x 0 def
/d_footer_y 0 def
/d_footer_w 536 def
/d_footer_h 0 def
/d_output_w 536 def
/d_output_h 729 def
/cols 1 def
%%EndSetup
%%Page: (1) 1
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (exam01.txt) def
/fdir (.) def
/ftail (exam01.txt) def
% User defined strings:
/fmodstr (Fri Mar 05 10:31:54 2021) def
/pagenumstr (1) def
/user_header_p true def
/user_header_left_str (exam01.txt 21-03-05 10:31:54) def
/user_header_center_str (1) def
/user_header_right_str (Tyler Punch) def
/user_footer_p false def
%%EndPageSetup
do_header
5 716 M
(1. vi was used to write the entire exam.) s
5 694 M
(2.) s
5 683 M
(TARGET=for) s
5 672 M
(OBJS=fileone.o filetwo.o filethree.o) s
5 661 M
(LIBS=-lm) s
5 650 M
(CFLAGS=-g -Wall) s
5 639 M
(FFLAGS=-g -Wall) s
5 617 M
($\(TARGET\):$\(OBJS\)) s
5 606 M
(        $\(CC\) -o $\(TARGET\) $\(OBJS\) $\(LIBS\)) s
5 584 M
(clean:) s
5 573 M
(        rm -f $\(TARGET\) $\(OBJS\)) s
5 551 M
(3. \([AI]' '\){,1}[A-Z]{1}[a-z]+' '{,1}\(\([a-Z"\\$%'\\\(\\\)*:;@]+' '?\)|\(\\d{1}\)\)[!\\.\\?]{1}) s
5 529 M
(Assumptions: I am assuming that an 'english sentence' begins with a capital) s
5 518 M
(character. I am also assuming since each sentence is on a single line that) s
5 507 M
(each sentence has no preceeding spaces. All sentences will also end with one) s
5 496 M
(punctuation mark. One word sentences are accepted. All words are seperated ) s
5 485 M
(by a single space. Proper english convention is used \(i.e. numbers greater ) s
5 474 M
(than 9 shall be written out, only one digit numbers\). I'm also allowing ) s
5 463 M
(certain metcharacters you may see in an english sentence.) s
5 441 M
(Unintended Matches: 'A.' will match but it's not really a sentence. ) s
5 430 M
(It will also match '@@@@@' since I am accepting metacharacters \(or really) s
5 419 M
(any random combo of metachars\). Can't really do this any better because you) s
5 408 M
(can't know how they may be used.) s
5 386 M
(4.) s
5 375 M
(#include <stdio.h>) s
5 364 M
(#include <stdlib.h>) s
5 353 M
(#include <errno.h>) s
5 342 M
(#include <sys/types.h>) s
5 331 M
(#include <sys/stat.h>) s
5 320 M
(#include <unistd.h>) s
5 298 M
(int main\(int argc, char *argv[]\)) s
5 287 M
({) s
5 276 M
(        int i;                          // argv index) s
5 265 M
(        off_t s=0;                      // total bytes) s
5 254 M
(        int ret=0;                      // general return value for errors) s
5 243 M
(        struct stat *buffer;) s
5 221 M
(        // Check for passed filename ) s
5 210 M
(        if \(argc < 2\) {) s
5 199 M
(                printf\("No filename passed\\n"\);) s
5 188 M
(                return -1;) s
5 177 M
(        }) s
5 155 M
(        // stat all files passed on the command line and count the bytes) s
5 144 M
(        for\(i = 1; i < argc; i++\) {) s
5 133 M
(                ret = stat\(argv[i], buffer\);) s
5 122 M
(                if \(ret < 0\) {) s
5 111 M
(                        printf\("Error using stat\(\)\\n"\);) s
5 100 M
(                        return -1;) s
5 89 M
(                }) s
5 78 M
(                s += buffer->st_size;) s
5 67 M
(        }) s
5 45 M
(        printf\("Total Size: %llu\\n", s\);        // Total) s
5 23 M
(        return 0;) s
5 12 M
(} ) s
_R
S
%%Page: (2) 2
%%BeginPageSetup
_S
38 24 translate
/pagenum 2 def
/fname (exam01.txt) def
/fdir (.) def
/ftail (exam01.txt) def
% User defined strings:
/fmodstr (Fri Mar 05 10:31:54 2021) def
/pagenumstr (2) def
/user_header_p true def
/user_header_left_str (exam01.txt 21-03-05 10:31:54) def
/user_header_center_str (2) def
/user_header_right_str (Tyler Punch) def
/user_footer_p false def
%%EndPageSetup
do_header
5 705 M
(5a. sudo chown -R pi /usr/src) s
5 683 M
(5b. ln -s /var/lib/systimer/logs/abc /usr/apt/opt/bin/foobar) s
5 661 M
(5c. chmod -R go+rx /opt/ngspice) s
5 639 M
(5d. out of time, had trouble with this in past) s
5 617 M
(6. I would attempt to meet with the highest ranking person\(s\) in the company as soon as) s
5 606 M
( I can. A physical meeting would be preferrable becuase I am completely ) s
5 595 M
(unaware of the true contents of these 'trade secret' files and "Trinity's" ) s
5 584 M
(intentions. And since she has a higher security clearence than myself I ) s
5 573 M
(wouldn't want her to know about what I've seen which she could find out if she ) s
5 562 M
(has administrative email access. I also need to explain myself to a higher-up ) s
5 551 M
(ASAP becuase I performed an unethical action by impersonating root on the ) s
5 540 M
(supercomputer and hadn't told anyone that I knew the root password when I ) s
5 529 M
(shouldn't. This could lead to a misunderstanding, with the company thinking I ) s
5 518 M
(may have been trying to sabotage/steal trade secrets.) s
5 496 M
(   I would explain that I was only trying to fix the high speed network ) s
5 485 M
(due to the upcoming demonsration to the clients. I would say I made a) s
5 474 M
(judgement call to fix the network due to the potential significant loss in ) s
5 463 M
(funding for the company and this demonstration was my responsibility. When) s
5 452 M
(I say how I obtained the root password, I would be sure to convey that ) s
5 441 M
("Trinity" did not give me the password knowingly \(and that it should probably) s
5 430 M
(be changed from "12345"\). After attempting to justify that my actions were) s
5 419 M
(done for the good of the company, I would then bring up the files I found.) s
5 397 M
(   Since I don't know what the files actually contain nor do I know "Trinity's" intenti) s
5 386 M
(ons there's not much more I can do about this. It's possible she's) s
5 375 M
(meant to have that access to our companys trade secrets. And as for the other) s
5 364 M
(companies files, I have no way of knowing how that information was obtained) s
5 353 M
(so I don't know if any "theft" has taken place. And again thats assuming) s
5 342 M
(it is what I think it is.) s
5 309 M
(7. enscript --header='$n %D $C|$%|Tyler Punch' ) s
5 298 M
(                exam01.txt -o temp | ps2pdf temp Punch-Tyler-ECE331-EX01.pdf) s
_R
S
%%Trailer
%%Pages: 2
%%DocumentNeededResources: font Courier-Bold Courier 
%%EOF
